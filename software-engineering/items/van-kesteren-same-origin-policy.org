#+TITLE: Notes on Same-origin policy
#+AUTHOR: Bart Frenk

* Meta
  Description: Blog post on the same-origin policy
  Tags: web, security
* Contents
** Same-origin security policy (SOP)
   Even under the same-origin policy a web page may freely embed cross-origin
   images, stylesheets, scripts, iframes and videos.
   
   Web fonts may not be freely embedded.

   Certain "cross-domain" requests, notably Ajax requests, however, are
   forbidden by default. (from [1])
** Cross-origin resource sharing (CORS)
   An origin is a domain, port number and a scheme.

   Defines a way in which browser and server can interact to determine whether
   or not it is safe to allow cross-origin requests.

   The standard defining CORS is [3].
   
   New HTTP headers:
   1. Send with the preflight OPTION to the resource owner.
      - Origin: send to the resource owner, with value the domain that served
        the parent page.
      - Access-Control-Request-Method
      - Access-Control-Request-Headers
   2. 
      - Access-Control-Allow-Origin (ACAO): header in the response indicating
        which origin sites are allowed.
      - Access-Control-Allow-Methods: PUT, DELETE
      - Access-Control-Allow-Credentials
      - Access-Control-Expose-Headers
      - Access-Control-Max-Age
      - Access-Control-Allow-Methods
      - Access-Control-Allow-Headers

    There is some information on these headers in this blog post [5].

*** Simple and non-simple requests
    From this StackOverflow answer [4]. A request is simple when either:
    1. uses an HTTP verb other than GET or POST
    2. uses non-simple request headers; the only simple headers are:
       - Accept
       - Accept-Language
       - Content-Language
       - Content-Type: only simple when its value is:
         - application/x-wwww-form-urlencoded
         - multipart/form-data
         - text/plain

* Footnotes
[1] https://en.wikipedia.org/wiki/Cross-origin_resource_sharing
[2] https://annevankesteren.nl/2015/02/same-origin-policy
[3] https://fetch.spec.whatwg.org/
[4] https://stackoverflow.com/questions/10636611/how-does-access-control-allow-origin-header-work
[5] http://restlet.com/company/blog/2015/12/15/understanding-and-using-cors/
